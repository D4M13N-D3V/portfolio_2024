name: Build and Publish

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'
          
      - id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      # Add a debug step to verify GitVersion output
      - name: Debug GitVersion Output
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          
      - name: Prepare Docker Repository Name
        id: prep
        run: |
          REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' | tr '_' '-')
          echo "repository=$REPO_NAME" >> $GITHUB_OUTPUT
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.prep.outputs.repository }}:latest
            ghcr.io/${{ steps.prep.outputs.repository }}:${{ steps.gitversion.outputs.semVer || '0.1.0' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
            
      - name: Create Release
        if: steps.gitversion.outputs.semVer != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          name: Release v${{ steps.gitversion.outputs.semVer }}
          generate_release_notes: true